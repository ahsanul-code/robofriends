{"version":3,"sources":["Card.js","CardList.js","SearchBox.js","ErrorBoundry.js","App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","ErrorBoundry","props","state","hasError","error","info","this","setState","children","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAceA,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GACxB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAM,SAASC,IAAG,+BAA0BH,EAA1B,aACvB,gCACI,6BAAKF,IACL,4BAAIC,WCeLK,EApBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAEf,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACI,cAAC,EAAD,CAEIR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCIlBC,EAbG,SAAC,GAAiC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC9B,OACI,qBAAKV,UAAY,MAAjB,SACI,uBACAA,UAAY,iCACZW,KAAK,SACLC,YAAY,gBACZC,SAAYH,OCaTI,G,wDAnBX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTC,UAAU,GAHA,E,qDAOlB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAG7B,WACI,OAAIG,KAAKJ,MAAMC,SACJ,0DAEJG,KAAKL,MAAMO,a,GAhBCC,cCgDZC,E,kDAzCX,aAAgB,IAAD,8BACX,gBAcJC,eAAiB,SAACC,GACd,EAAKL,SAAS,CAAEZ,YAAaiB,EAAMC,OAAOC,SAd1C,EAAKZ,MAAQ,CACTZ,OAAQ,GACRK,YAAa,IAJN,E,qDAQnB,WAAoB,IAAD,OACfoB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKZ,SAAS,CAAEjB,OAAQ6B,S,oBAQvC,WAAW,IAAD,OACAC,EAAiBd,KAAKJ,MAAMZ,OAAO+B,QAAO,SAAA/B,GAChD,OAAOA,EAAOP,KAAKuC,cAAcC,SAAS,EAAKrB,MAAMP,YAAY2B,kBAEjE,OAAiC,IAA7BhB,KAAKJ,MAAMZ,OAAOkC,OACX,yCAGH,sBAAKtC,UAAU,KAAf,UACI,oBAAIA,UAAY,KAAhB,yBACA,cAAC,EAAD,CAAWU,aAAgBU,KAAKK,iBAChC,iCACI,cAAC,EAAD,UACC,cAAC,EAAD,CAAUrB,OAAU8B,e,GAjC3BX,aCIHgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OAAO,cAAC,EAAD,IAAOC,SAASC,eAAe,SAK/CX,M","file":"static/js/main.79417e74.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Card = ({name, email, id}) => {\r\n    return (\r\n        <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n            <img alt = \"robots\" src={`https://robohash.org/${id}200x200`}></img>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst CardList = ({robots}) => {\r\n   \r\n    return (\r\n        <div>\r\n            {\r\n                robots.map((user, i) => {\r\n                    return (\r\n                        <Card \r\n                            key={i} \r\n                            id={robots[i].id} \r\n                            name={robots[i].name} \r\n                            email={robots[i].email}\r\n                    />\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList; ","import React from \"react\";\r\n\r\nconst SearchBox = ({ searchfield, searchChange}) => {\r\n    return (\r\n        <div className = \"pa2\" >\r\n            <input \r\n            className = \"pa3 ba--green bg-lightest-blue\"\r\n            type=\"search\" \r\n            placeholder=\"search robots\"\r\n            onChange = {searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox; ","import React, { Component } from \"react\";\r\n\r\nclass ErrorBoundry extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info){\r\n        this.setState({hasError: true});\r\n    }   \r\n    \r\n    render() {\r\n        if (this.state.hasError){\r\n            return <h1>Oooops. That is not good</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React, { Component } from \"react\";\r\nimport CardList from \"./CardList\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport { robots } from \"./robots\";\r\nimport \"./App.css\";\r\nimport Scroll from \"./Scroll.js\";\r\nimport ErrorBoundry from \"./ErrorBoundry\";\r\n\r\nclass App extends Component {\r\n    constructor () {\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: \"\"\r\n        }\r\n    }\r\n\r\ncomponentDidMount(){\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(response => response.json())\r\n    .then(users => this.setState({ robots: users}));\r\n    }\r\n    \r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value })\r\n    }\r\n\r\n    render () {\r\n        const filteredRobots = this.state.robots.filter(robots => {\r\n        return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n        })\r\n        if (this.state.robots.length === 0 ){\r\n            return <h1>Loading</h1>\r\n        } else {\r\n            return(\r\n                <div className=\"tc\">\r\n                    <h1 className = \"f1\">RoboFriends</h1>\r\n                    <SearchBox searchChange = {this.onSearchChange}/>\r\n                    <scroll>\r\n                        <ErrorBoundry>\r\n                         <CardList robots = {filteredRobots}/>\r\n                        </ErrorBoundry>\r\n                    </scroll>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from \"./App\";\nimport reportWebVitals from './reportWebVitals';\nimport \"tachyons\";\n\n\nReactDOM.render(<App/>,document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n    "],"sourceRoot":""}